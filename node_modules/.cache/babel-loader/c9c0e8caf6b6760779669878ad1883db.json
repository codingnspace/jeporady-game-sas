{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pmcphee/repos/jeporady-game-sas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/pmcphee/repos/jeporady-game-sas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pmcphee/repos/jeporady-game-sas/src/App.js\";\nimport React, { useEffect, useState } from \"react\"; // Comment out styles import before running test\n\nimport \"./App.css\";\n\nvar LoadingClues = function LoadingClues() {\n  return React.createElement(\"div\", {\n    className: \"loading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Hang tight! Clues are incoming...\"), React.createElement(\"picture\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"Jeporady Logo\",\n    src: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.ytimg.com%2Fvi%2FeDAFMk-OpYo%2Fhqdefault.jpg&f=1&nofb=1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })));\n};\n\nexport var DisplayClues = function DisplayClues(_ref) {\n  var _ref$clues = _ref.clues,\n      clues = _ref$clues === void 0 ? [] : _ref$clues,\n      handleShowingAnswer = _ref.handleShowingAnswer;\n  return clues.map(function (clue) {\n    return React.createElement(\"div\", {\n      className: \"clue\",\n      key: clue.id,\n      onClick: function onClick(event) {\n        return handleShowingAnswer(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, clue.question), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"For: \", clue.value)), React.createElement(\"h4\", {\n      className: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, clue.answer));\n  });\n};\nexport var JeopardyQuestions = function JeopardyQuestions() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      clues = _useState2[0],\n      setClues = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var minDate = \"1996-01-01\";\n  var maxDate = \"1996-12-31\";\n\n  var valueComparer = function valueComparer(a, b) {\n    return parseInt(a.value, 10) - parseInt(b.value, 10);\n  };\n\n  var handleShowingAnswer = function handleShowingAnswer(event) {\n    var clue = event.target.closest(\".clue\");\n    clue.classList.toggle(\"showAnswer\");\n  };\n\n  useEffect(function () {\n    var retrieveClues = function retrieveClues() {\n      return _regeneratorRuntime.async(function retrieveClues$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"https://cors-anywhere.herokuapp.com/http://jservice.io/api/clues?category=25&min_date=\".concat(minDate, \"&max_date=\").concat(maxDate)).then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                var finalClues = data.filter(function (clueObj) {\n                  return clueObj.value;\n                }).slice(0, 5).sort(valueComparer);\n                setClues(finalClues);\n                setIsLoading(false);\n              }));\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 6]]);\n    };\n\n    retrieveClues();\n  }, []);\n  return React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Science Clues\"), isLoading ? React.createElement(LoadingClues, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }) : React.createElement(DisplayClues, {\n    clues: clues,\n    handleShowingAnswer: handleShowingAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\nexport default function App() {\n  return React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Let's Play Jeopardy!\"), React.createElement(JeopardyQuestions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n} // I wasn't able to find the id for the science category through looking\n// the docs. So, I wrote the following script to find the id\n// const findScienceId = (id) => {\n//   fetch(`https://cors-anywhere.herokuapp.com/http://jservice.io/api/categories?count=100&offset=${id}`)\n// .then(res => res.json())\n// .then(data => {\n//   let foundScience = false;\n//     const science = data.find(cat => cat.title === \"science\");\n//     const lastId = data[data.length - 1].id;\n//     if (science) {\n//       foundScience = true;\n//       console.log(science)\n//     } else {\n//       findScienceId(lastId)\n//     }\n// })\n// .catch(err => console.error(err))\n// }\n// findScienceId(8960)\n// science id = 25","map":{"version":3,"sources":["/Users/pmcphee/repos/jeporady-game-sas/src/App.js"],"names":["React","useEffect","useState","LoadingClues","DisplayClues","clues","handleShowingAnswer","map","clue","id","event","question","value","answer","JeopardyQuestions","setClues","isLoading","setIsLoading","minDate","maxDate","valueComparer","a","b","parseInt","target","closest","classList","toggle","retrieveClues","fetch","then","res","json","data","finalClues","filter","clueObj","slice","sort","console","error","App"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// Comment out styles import before running test\nimport \"./App.css\";\n\nconst LoadingClues = () =>{ \n  return (\n    <div className=\"loading\">\n      <h5>Hang tight! Clues are incoming...</h5>\n      <picture>\n        <img\n          alt=\"Jeporady Logo\"\n          src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.ytimg.com%2Fvi%2FeDAFMk-OpYo%2Fhqdefault.jpg&f=1&nofb=1\"\n        />\n      </picture>\n    </div>\n  );\n};\n\nexport const DisplayClues = ({clues = [], handleShowingAnswer}) => {\n  return clues.map(clue => {\n    return (\n      <div\n        className=\"clue\"\n        key={clue.id}\n        onClick={event => handleShowingAnswer(event)}>\n        <div className=\"question\">\n          <h4>{clue.question}</h4>\n          <h5>For: {clue.value}</h5>\n        </div>\n        <h4 className=\"answer\">{clue.answer}</h4>\n      </div>\n    );\n  });\n};\n\nexport const JeopardyQuestions = () => {\n  const [clues, setClues] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const minDate = \"1996-01-01\";\n  const maxDate = \"1996-12-31\";\n  const valueComparer = (a, b) => {\n    return parseInt(a.value, 10) - parseInt(b.value, 10);\n  };\n\n  const handleShowingAnswer = event => {\n    const clue = event.target.closest(\".clue\");\n    clue.classList.toggle(\"showAnswer\");\n  };\n\n  useEffect(() => {\n    const retrieveClues = async () => {\n      setIsLoading(true);\n      try {\n        await fetch(\n          `https://cors-anywhere.herokuapp.com/http://jservice.io/api/clues?category=25&min_date=${minDate}&max_date=${maxDate}`\n        )\n          .then(res => res.json())\n          .then(data => {\n            const finalClues = data\n              .filter(clueObj => {\n                return clueObj.value;\n              })\n              .slice(0, 5)\n              .sort(valueComparer);\n            setClues(finalClues);\n            setIsLoading(false);\n          });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    retrieveClues();\n  }, []);\n\n  return (\n    <article>\n      <h3>Science Clues</h3>\n      {isLoading ? <LoadingClues /> \n      : <DisplayClues clues={clues} handleShowingAnswer={handleShowingAnswer} />}\n    </article>\n  );\n}\n\nexport default function App() {\n  return (\n    <main className=\"App\">\n      <h1>Let's Play Jeopardy!</h1>\n      <JeopardyQuestions />\n    </main>\n  );\n}\n\n// I wasn't able to find the id for the science category through looking\n// the docs. So, I wrote the following script to find the id\n// const findScienceId = (id) => {\n//   fetch(`https://cors-anywhere.herokuapp.com/http://jservice.io/api/categories?count=100&offset=${id}`)\n// .then(res => res.json())\n// .then(data => {\n//   let foundScience = false;\n//     const science = data.find(cat => cat.title === \"science\");\n//     const lastId = data[data.length - 1].id;\n//     if (science) {\n//       foundScience = true;\n//       console.log(science)\n//     } else {\n//       findScienceId(lastId)\n//     }\n// })\n// .catch(err => console.error(err))\n// }\n\n// findScienceId(8960)\n\n// science id = 25\n"]},"metadata":{},"sourceType":"module"}